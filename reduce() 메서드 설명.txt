reduce() 함수
JavaScript 배열의 각 요소를 순차적으로 처리하여 하나의 결과값으로 축약(누적)하는 데 사용되는 매우 강력한 고차 함수입니다.

📌 기본 문법
arr.reduce(callback, initialValue);

-callback: 누적 작업을 수행하는 함수. 이 함수는 4개의 인자를 가짐:
accumulator: 누적된 결과
currentValue: 현재 요소
currentIndex (선택)
array (선택)

-initialValue: accumulator의 초기값

📘 예제
1. 배열 숫자 합치기
const numbers = [1, 2, 3, 4, 5];
const sum = numbers.reduce((acc, cur) => acc + cur, 0);
console.log(sum); // 15

2. 최대값 찾기
const nums = [5, 10, 3, 20];
const max = nums.reduce((acc, cur) => (cur > acc ? cur : acc), nums[0]);
console.log(max); // 20

3. 배열 객체에서 특정 값 누적하기
const items = [
  { name: 'apple', price: 1000 },
  { name: 'banana', price: 1500 },
  { name: 'orange', price: 1200 },
];

const totalPrice = items.reduce((acc, item) => acc + item.price, 0);
console.log(totalPrice); // 3700

🧠 요약
배열을 하나의 값으로 "축소"할 때 사용
map이나 filter보다 복잡한 누적 작업이 필요할 때 유용
initialValue를 꼭 넣는 습관이 좋음 (초기값 미지정 시 첫 번째 요소가 초기값이 됨)

