프레임워크(Framework)와 라이브러리(Library)

🔧 라이브러리(Library)
정의: 특정 기능을 수행하는 함수나 클래스의 모음입니다.
사용 방식: 개발자가 직접 호출해서 사용합니다.

예시:
C#의 Newtonsoft.Json (JSON 파싱)
Python의 NumPy (수치 계산)
JavaScript의 Lodash (유틸리티 함수 모음)

✅ 특징
개발자가 흐름을 직접 제어함
필요한 기능만 골라서 사용 가능
비교적 가볍고 단순함

🏗️ 프레임워크(Framework)
정의: 애플리케이션 구조를 정의해주고, 기본 골격을 제공하는 도구입니다.

사용 방식: 프레임워크가 개발자의 코드를 호출(callback) 합니다. 
	     → 이것을 제어의 역전(Inversion of Control) 이라고 합니다.

예시:

C#의 .NET (ASP.NET 등)
Java의 Spring
JavaScript의 React, Angular, Vue

✅ 특징
전체 구조를 정해줌
개발자는 정해진 방식대로 코드를 작성
큰 프로젝트에 적합, 유지보수 용이

⚖️ 프레임워크 vs 라이브러리 비교

항목		프레임워크			라이브러리
제어 흐름	프레임워크가 제어	개발자가 제어
구조 제공	제공함			제공하지 않음
사용 방식	규칙에 따라 작성		필요할 때 호출
학습 곡선	상대적으로 높음		낮은 편
예시	ASP.NET, Spring, Angular	Newtonsoft.Json, NumPy, jQuery

💡 비유로 이해하면?
라이브러리는 "내가 필요한 도구를 꺼내 쓰는 공구함"
프레임워크는 "설계도와 매뉴얼이 이미 정해진 조립식 집짓기 세트"

