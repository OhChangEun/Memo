버튼 커스터마이징 

<script setup>
const props = defineProps({
  size: { type: String, default: "md" },        // sm, md, lg
  variant: { type: String, default: "primary" }, // primary, secondary, danger 등
  disabled: { type: Boolean, default: false },
  label: { type: String, required: true },
});

const sizeClasses = {
  sm: "text-sm py-1 px-3",
  md: "text-base py-2 px-4",
  lg: "text-lg py-3 px-6",
};

const variantClasses = {
  primary: "bg-blue-600 text-white hover:bg-blue-700",
  secondary: "bg-gray-300 text-gray-800 hover:bg-gray-400",
  danger: "bg-red-600 text-white hover:bg-red-700",
};

const computedClass = computed(() => {
  return [
    "rounded font-medium transition",
    sizeClasses[props.size],
    props.disabled ? "opacity-50 cursor-not-allowed" : variantClasses[props.variant],
  ].join(" ");
});
</script>

<template>
  <button :class="computedClass" :disabled="disabled">{{ label }}</button>
</template>