TCP / UDP 설명

TCP (Transmission Control Protocol)
TCP는 신뢰성 있는 연결 지향형 프로토콜입니다. 주로 데이터의 정확한 전송을 보장해야 하는 애플리케이션에서 사용됩니다. 
TCP는 연결을 설정하고 데이터가 순서대로, 손실 없이 전달되도록 보장합니다.

특징
연결 지향적: TCP는 데이터를 보내기 전에 연결을 설정해야 합니다. 연결이 설정된 후에 데이터를 전송합니다.
신뢰성: 데이터를 순서대로 전송하고, 손실된 데이터가 있으면 재전송 요청을 합니다.
흐름 제어: 수신자가 처리할 수 있는 속도에 맞춰 데이터를 전송하는 방식입니다.
혼잡 제어: 네트워크가 과부하에 걸리지 않도록 전송 속도를 조절합니다.
에러 검출 및 복구: 오류가 발생하면 자동으로 복구하는 메커니즘을 갖추고 있습니다.

작동 방식
3-way Handshake (3단계 연결 설정 과정):

SYN: 클라이언트가 서버에 연결을 요청합니다.
SYN-ACK: 서버가 요청을 수락하고 응답합니다.
ACK: 클라이언트가 서버의 응답을 확인하고 연결이 완료됩니다.

데이터 전송 및 확인: 데이터는 작은 세그먼트로 나뉘어 전송되며, 수신자는 각 세그먼트를 확인하고 응답합니다.
만약 세그먼트가 손실되거나 오류가 발생하면 재전송이 요청됩니다.

연결 종료: 데이터를 다 전송한 후, 연결을 종료합니다. 이는 4단계로 이루어진 종료 과정에 의해 처리됩니다.

장점
데이터의 신뢰성 보장
순서 보장
오류 복구

단점
연결 설정 및 종료에 시간이 소요되어 상대적으로 느리다.
오버헤드가 크다 (흐름 제어, 혼잡 제어 등 추가 처리 필요).

UDP (User Datagram Protocol)
UDP는 비연결형 프로토콜로, 빠른 데이터 전송이 필요한 상황에서 사용됩니다. 
UDP는 데이터가 손실되더라도 전송을 멈추지 않으며, 순서나 정확성에 대한 보장이 없습니다.

특징
비연결형: 데이터 전송 전에 연결을 설정할 필요가 없습니다.
신뢰성 없음: 전송된 데이터가 손실되거나 순서가 뒤바뀌어도 애플리케이션에서 이를 처리해야 합니다.
빠른 속도: 연결을 설정하지 않기 때문에 전송이 빠르고 오버헤드가 적습니다.
에러 검출: 오류 검출을 위한 체크섬을 제공하지만, 오류 복구는 하지 않습니다.

작동 방식
데이터그램 단위로 데이터를 전송합니다.
각 데이터그램에는 목적지 포트 번호와 출발지 포트 번호 등의 정보가 포함되어 있습니다.
수신자는 단순히 데이터를 수신하고, 전송자는 데이터를 보내기만 합니다.

장점
빠르고, 실시간성 요구가 있는 애플리케이션에 적합 (예: 온라인 게임, 실시간 영상 스트리밍)
오버헤드가 적고, 빠른 응답 속도를 제공합니다.

단점
데이터 손실 가능성
순서 보장 안 됨
오류 복구 없음

TCP와 UDP의 비교
특성				TCP							UDP
연결 방식			연결 지향적 (3-way handshake)		비연결형
신뢰성			신뢰성 보장 (전송 보장, 순서 보장)		신뢰성 없음 (손실된 데이터 복구 안 됨)
속도				상대적으로 느림 (오버헤드가 많음)		빠름 (오버헤드가 적음)
흐름 제어 및 혼잡 	제어 있음						없음
응용 예			웹 브라우징, 파일 전송 (HTTP, FTP 등)	실시간 비디오 스트리밍, VoIP, 온라인 게임 등
에러 처리			자동으로 에러 복구				에러 복구 없음

결론
TCP는 신뢰성이 필요한 응용 프로그램(예: 웹 브라우징, 파일 전송 등)에 적합합니다.
UDP는 빠른 속도와 실시간 전송이 중요한 응용 프로그램(예: VoIP, 온라인 게임, 실시간 스트리밍 등)에 적합합니다.


