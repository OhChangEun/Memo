추상 클래스(abstract class)는 객체를 직접 생성할 수 없고, 상속을 통해서만 사용되는 클래스입니다. 주로 공통 기능을 정의하고, 세부 구현은 자식 클래스에 맡기기 위한 목적으로 사용됩니다.
다음은 핵심 개념과 함께 설명입니다:

✅ 추상 클래스란?
공통적인 속성과 메서드를 정의
**추상 메서드(몸체가 없는 메서드)**를 포함할 수 있음
자식 클래스가 반드시 추상 메서드를 구현해야 함
객체 생성 불가

// 추상 클래스
abstract class Animal {
    // 일반 메서드
    public void breathe() {
        System.out.println("숨을 쉽니다.");
    }

    // 추상 메서드 (몸체 없음)
    public abstract void makeSound();
}

// 추상 클래스를 상속한 클래스
class Dog extends Animal {
    // 추상 메서드 구현 (필수)
    @Override
    public void makeSound() {
        System.out.println("멍멍!");
    }
}

// 사용 예시
public class Main {
    public static void main(String[] args) {
        // Animal a = new Animal(); ← ❌ 오류! 추상 클래스는 객체 생성 불가
        Animal a = new Dog();  // ✅ 다형성 사용 가능
        a.breathe();
        a.makeSound();
    }
}

✅ 2. 왜 추상 클래스는 객체를 생성할 수 없을까?
이유:

**추상 클래스는 "완성되지 않은 설계도"**입니다.
추상 메서드가 구현되지 않았기 때문에 실제로 동작시킬 수 있는 구체적인 내용이 없음
만약 객체를 생성할 수 있다면, 호출할 수 없는 추상 메서드 때문에 런타임 오류 발생 위험

비유:
추상 클래스는 "기계 설계도"처럼 핵심 틀은 제공하지만, 부품을 아직 조립하지 않은 상태입니다.
이런 미완성 상태에서는 실제로 기계를 작동시킬 수 없죠.
따라서, **완성(=상속 후 구현)**한 자식 클래스를 통해서만 객체를 만들 수 있습니다.

✅ 요약
항목	설명
추상 클래스	abstract 키워드 사용, 일부 메서드만 구현 가능
추상 메서드	abstract 키워드로 선언, 구현 없음
객체 생성		❌ 불가 (new Animal() 불가)
사용 방법		자식 클래스에서 extends 후 모든 추상 메서드 구현해야 객체 생성 가능
