HTTP (HyperText Transfer Protocol)는 웹에서 데이터를 주고받기 위한 프로토콜입니다. 
클라이언트(보통 웹 브라우저)와 서버 간의 요청과 응답 형식으로 데이터를 전달하며, 주로 웹 페이지를 로드할 때 사용됩니다.

1. HTTP의 기본 작동 방식

HTTP는 **요청(Request)**과 **응답(Response)**으로 이루어진 클라이언트-서버 모델에 기반을 두고 있습니다.
요청: 클라이언트가 서버에 데이터를 요청할 때 사용. 예를 들어, 웹 브라우저가 URL을 입력하면 해당 요청이 서버로 전달됩니다.
응답: 서버는 요청을 처리한 후, 클라이언트에 응답을 반환합니다. 이 응답은 웹 페이지, 이미지, 데이터 파일 등 다양한 형태로 될 수 있습니다.

2. HTTP 메시지

HTTP 통신은 요청 메시지와 응답 메시지로 나뉩니다. 각 메시지는 크게 3부분으로 구성됩니다:
헤더(Header): 요청 또는 응답에 대한 메타정보. 예: 요청의 종류, 서버 정보, 쿠키 등
본문(Body): 실제 전달되는 데이터 (예: HTML 문서, 이미지 등)
상태 코드(Status Code): 서버의 응답 상태를 나타내는 숫자 코드 (예: 200 OK, 404 Not Found)

3. HTTP 메소드

HTTP는 클라이언트가 서버에 요청하는 방식에 따라 다양한 메소드를 사용합니다. 주요 메소드는 다음과 같습니다:

GET: 서버에서 데이터를 조회할 때 사용
POST: 서버에 데이터를 제출할 때 사용 (예: 폼 데이터 전송)
PUT: 서버의 자원을 수정할 때 사용
DELETE: 서버에서 자원을 삭제할 때 사용
PATCH: 서버의 일부 자원을 수정할 때 사용

4. 상태 코드

HTTP 응답에는 서버의 처리 결과를 나타내는 상태 코드가 포함됩니다. 주요 상태 코드는 다음과 같습니다:

200 OK: 요청이 정상적으로 처리됨
301 Moved Permanently: 요청한 리소스가 다른 곳으로 영구 이동
404 Not Found: 요청한 리소스가 서버에 없음
500 Internal Server Error: 서버 내부 오류

5. 단방향 통신
서버는 클라이언트의 요청을 기다리며, 클라이언트가 요청을 보낼 때만 응답을 할 수 있습니다. 반대로, 서버에서 먼저 클라이언트에게 데이터를 푸시하거나 요청 없이 데이터를 전송하는 방식은 HTTP에서는 지원되지 않습니다. 이러한 특성 때문에 HTTP는 기본적으로 단방향 통신이라고 할 수 있습니다.
즉, HTTP는 클라이언트가 요청을 보내야만 서버가 응답할 수 있는 요청-응답 형태의 통신 방식입니다.

6. HTTPS와 HTTP의 차이

HTTP는 데이터를 암호화하지 않고 전송하기 때문에 보안에 취약합니다.
HTTPS는 HTTP에 보안 계층(SSL/TLS)을 추가한 프로토콜로, 데이터를 암호화하여 전송합니다. 이를 통해 중간자 공격(Man-in-the-Middle Attack)을 방지할 수 있습니다.
HTTP는 매우 기본적인 웹 통신 방식으로, 이를 기반으로 다양한 웹 애플리케이션과 서비스가 동작합니다.

